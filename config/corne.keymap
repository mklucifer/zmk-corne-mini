#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <325>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(C))>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(V))>;
            label = "PASTE";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            label = "UNDO";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Y)>;
            label = "REDO";
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(X)>;
            label = "CUT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp Q       &kp W           &kp E        &kp R             &kp T        &kp Y        &kp U             &kp I        &kp O           &kp P               &trans
&trans  &hm LGUI A  &hm LEFT_ALT S  &hm LCTRL S  &hm LEFT_SHIFT F  &kp G        &kp H        &hm LEFT_SHIFT J  &hm LCTRL K  &hm LEFT_ALT L  &hm RGUI SEMICOLON  &trans
&trans  &kp Z       &kp X           &kp C        &kp V             &kp B        &kp N        &kp M             &kp COMMA    &kp DOT         &kp FSLH            &trans
                                    &lt 6 ESC    &lt 5 SPACE       &lt 4 TAB    &lt 1 ENTER  &lt 2 BACKSPACE   &lt 3 DEL
            >;
        };

        SYM {
            display-name = "SYM";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES           &kp POUND             &kp DOLLAR       &kp PERCENT         &kp CARET          &kp AMPERSAND    &kp ASTERISK     &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS  &trans
&trans  &hm LGUI TILDE2  &hm LSHFT NON_US_BACKSLASH  &hm LALT PIPE2        &hm LCTRL SLASH  &kp LEFT_BRACE      &kp RIGHT_BRACE    &hm RCTRL SLASH  &hm RALT TILDE2  &hm RSHFT NON_US_BACKSLASH  &hm RGUI PIPE2         &trans
&trans  &trans           &trans                      &kp NON_US_BACKSLASH  &kp TILDE2       &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp PIPE         &kp SLASH        &trans                      &trans                 &trans
                                                     &kp ESC               &kp SPACE        &kp SINGLE_QUOTE    &trans             &kp BACKSPACE    &kp DEL
            >;
        };

        NUM {
            display-name = "NUM";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp NUMBER_1    &kp NUMBER_2     &kp NUMBER_3  &kp NUMBER_4                      &kp N5                              &kp NUMBER_6     &kp N7           &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans  &kp LEFT_GUI    &kp LCTRL        &kp LALT      &kp LEFT_SHIFT                    &trans                              &trans           &kp LEFT_SHIFT   &kp LEFT_ALT  &kp LCTRL     &kp LEFT_GUI  &trans
&trans  &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &trans        &rgb_ug RGB_COLOR_HSB(227,99,51)  &rgb_ug RGB_COLOR_HSB(123,99,51)    &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans        &trans        &trans        &trans
                                         &kp ESC       &kp SPACE                         &kp TAB                             &kp RET          &trans           &kp DEL
            >;
        };

        FUN {
            display-name = "FUN";
            bindings = <
&trans  &kp F1        &kp F2            &kp F3        &kp F4          &kp F5            &kp F6     &kp F7          &kp F8     &kp F9        &kp F10       &trans
&trans  &hm LGUI F11  &hm LEFT_ALT F12  &kp LCTRL     &kp LEFT_SHIFT  &trans            &trans     &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_CLR      &bt BT_CLR_ALL    &trans     &trans          &trans     &trans        &bootloader   &trans
                                        &kp ESC       &kp SPACE       &kp TAB           &kp ENTER  &kp BACKSPACE   &trans
            >;
        };

        MOUSE {
            display-name = "MOUSE";
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans    &redo           &paste          &copy            &cut          &undo            &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans        &trans        &trans     &trans          &trans    &msc SCRL_DOWN  &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans        &trans           &trans
                                    &trans     &trans          &trans    &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };

        NAV {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans    &redo         &paste          &copy           &cut          &undo            &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp CAPSLOCK  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans        &trans        &trans     &trans          &trans    &kp INSERT    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                    &trans     &trans          &trans    &kp ENTER     &kp BACKSPACE   &kp DEL
            >;

            label = "NAV";
        };

        MEDIA {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &trans      &trans            &trans             &trans           &trans              &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans      &kp C_REWIND      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_FAST_FORWARD  &trans
&trans  &trans  &trans  &trans  &trans  &trans     &trans      &trans            &trans             &trans           &trans              &trans
                        &trans  &trans  &kp TAB    &kp K_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE
            >;

            label = "MEDIA";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
